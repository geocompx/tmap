```{r charts-1}
#| echo: false
source("code/before_script.R")
```

# Charts {#sec-charts}

```{r charts-2}
#| echo: false
charts_df = tibble::tribble(
  ~Function, ~Description,
  "tm_chart_histogram()", "Histogram",
  "tm_chart_box()", "Box plot",
  "tm_chart_violin()", "Violin plot",
  "tm_chart_bar()", "Bar chart",
  "tm_chart_donut()", "Donut chart",
  "tm_chart_heatmap()", "Heatmap",
  "tm_chart_none()", "No chart"
)
```

```{r}
#| label: tbl-layers-table
#| tbl-cap: "Available chart types."
#| echo: false
#| warning: false
#| message: false
tinytable::tt(charts_df) |>
  tinytable::style_tt(j = 1, monospace = TRUE)
```

```{r charts-4}
#| message: false
library(tmap)
library(sf)
slo_regions = read_sf("data/slovenia/slo_regions.gpkg")
```

```{r}
#| label: fig-chart-hist
#| fig-cap: "Histogram added to a map to represent the distribution of a variable."
#| message: false
tm_shape(slo_regions) +
  tm_polygons(fill = "pop_dens",
              fill.chart = tm_chart_histogram())
```

<!-- mention positioning -->

## Numerical data

```{r}
#| eval: false
# box plot
tm_shape(slo_regions) +
  tm_polygons(fill = "pop_dens",
              fill.chart = tm_chart_box())
# violin plot
tm_shape(slo_regions) +
  tm_polygons(fill = "pop_dens",
              fill.chart = tm_chart_violin())
# donut plot
tm_shape(slo_regions) +
  tm_polygons(fill = "pop_dens",
              fill.chart = tm_chart_donut())
```

```{r}
#| label: fig-chart-num
#| fig-cap: "Charts for numerical data."
#| message: false
#| echo: false
#| fig-asp: 0.8
tm_shape(slo_regions) +
  tm_polygons(fill = "pop_dens",
              fill.chart = tm_chart_box(position = tm_pos_out("center", "bottom", 0.1, 1)),
              fill.legend = tm_legend(position = tm_pos_out("center", "bottom", 0, 1))) +
  tm_polygons(fill = "pop_dens",
              fill.chart = tm_chart_violin(position = tm_pos_out("center", "bottom", 0.45, 1)),
              fill.legend = tm_legend(position = tm_pos_out("center", "bottom", 0.35, 1))) +
  tm_polygons(fill = "pop_dens",
              fill.chart = tm_chart_donut(position = tm_pos_out("center", "bottom", 0.8, 1)),
              fill.legend = tm_legend(position = tm_pos_out("center", "bottom", 0.7, 1)))

tm_shape(slo_regions) +
  tm_polygons(fill = "pop_dens",
              fill.chart = tm_chart_box(group_id = "a"),
              fill.legend = tm_legend(group_id = "a")) +
  tm_polygons(fill = "pop_dens",
              fill.chart = tm_chart_violin(group_id = "b"),
              fill.legend = tm_legend(group_id = "b")) +
  tm_polygons(fill = "pop_dens",
              fill.chart = tm_chart_donut(group_id = "c"),
              fill.legend = tm_legend(group_id = "c")) +
  tm_components("a", position = tm_pos_out("center", "bottom", 0, 1), stack = "horizontal") +
  tm_components("b", position = tm_pos_out("center", "bottom", 0.35, 1), stack = "horizontal") +
  tm_components("c", position = tm_pos_out("center", "bottom", 0.7, 1), stack = "horizontal")
```


## Categorical data

```{r}
#| eval: false
tm_shape(slo_regions) +
  tm_polygons(fill = "region_group",
              fill.chart = tm_chart_bar())
tm_shape(slo_regions) +
  tm_polygons(fill = "region_group",
              fill.chart = tm_chart_donut())
```

```{r}
#| label: fig-chart-cat
#| fig-cap: "Charts for categorical data."
#| message: false
#| echo: false
#| fig-asp: 0.8
tm_shape(slo_regions) +
  tm_polygons(fill = "region_group",
              fill.chart = tm_chart_bar(group_id = "a"),
              fill.legend = tm_legend(group_id = "a")) +
  tm_polygons(fill = "region_group",
              fill.chart = tm_chart_donut(group_id = "b"),
              fill.legend = tm_legend(group_id = "b")) +
  tm_components("a", position = tm_pos_out("center", "bottom", 0, 1), stack = "horizontal") +
  tm_components("b", position = tm_pos_out("center", "bottom", 0.7, 1), stack = "horizontal") 
```

## Bivariate data

```{r}
#| label: fig-chart-bivariate
#| fig-cap: "Bivariate charts used in case of representing a relationship between two numerical variables."
#| message: false
tm_shape(slo_regions) +
  tm_polygons(fill = tm_vars(c("pop_dens", "pop65perc"), multivariate = TRUE),
              fill.scale = tm_scale_bivariate(values = "purplegold"),
              fill.chart = tm_chart_heatmap())
```

## Additional customization

<!-- with ggplot2 package and/or book reference -->
<!-- https://github.com/geocompx/tmap/issues/10#issuecomment-3007409988 -->

```{r}
#| label: fig-chart-ggplot1
#| fig-cap: "Customizing charts with ggplot2."
#| message: false
library(ggplot2)
tm_shape(slo_regions) +
  tm_polygons(fill = "pop_dens",
              fill.chart = tm_chart_histogram(
                plot.axis.x = TRUE,
                extra.ggplot2 = list(theme(plot.background = element_rect(fill = "lightgray")))
              ))
```

```{r}
#| label: fig-chart-ggplot2
#| fig-cap: "Using chart as a map legend."
#| message: false
tm_shape(slo_regions) +
  tm_polygons(fill = "pop_dens",
              fill.chart = tm_chart_histogram(
                plot.axis.x = TRUE,
                plot.axis.y = TRUE,
                extra.ggplot2 = list(theme(plot.background = element_rect(fill = "#FFC067"),
                                           plot.title = ggplot2::element_text(size = 10)),
                                     coord_flip(),
                                     labs(title = "Population density")),
                position = tm_pos_in("LEFT", "TOP"),
                width = 20,
              ),
              fill.legend = tm_legend(show = FALSE))
```
