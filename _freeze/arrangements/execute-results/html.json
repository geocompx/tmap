{
  "hash": "2a78c2b01ab04ea0f018fc12f96e7ede",
  "result": {
    "engine": "knitr",
    "markdown": "::: {.cell}\n\n:::\n\n\n\n\n\n# Arranging maps {#sec-arranging-maps}\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tmap)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(sf)\nslo_regions = read_sf(\"data/slovenia/slo_regions.gpkg\")\ntm1 = tm_shape(slo_regions) +\n  tm_fill(\"gdppercap\") +\n  tm_borders() +\n  tm_title(\"GDP per capita in Slovenia\")\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(stars)\nslo_elev = read_stars(\"data/slovenia/slo_elev.tif\")\ntm2 = tm_shape(slo_elev) +\n  tm_raster() +\n  tm_borders() +\n  tm_title(\"Elevation in Slovenia\")\n```\n:::\n\n\n\n\n\n<!-- nrow, -->\n<!-- ncol -->\n<!-- asp -->\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntmap_arrange(tm1, tm2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![Arranging two maps in one layout.](figures/fig-arrangements1-1.png){#fig-arrangements1 fig-align='center' width=100%}\n:::\n:::\n\n\n\n\n\n<!-- frame alighnment -->\n\n<!-- tmap_grob? -->\n\n<!-- widths, heights -->\n<!-- any better example idea? -->\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntmap_arrange(tm1, tm2, nrow = 2, heights = c(0.8, 0.2))\n#> [scale] tm_raster:() the data variable assigned to 'col' contains positive and negative values, so midpoint is set to 0. Set 'midpoint = NA' in 'fill.scale = tm_scale_intervals(<HERE>)' to use all visual values (e.g. colors)\n#> [plot mode] fit legend/component: Some legend items or map compoments do not\n#> fit well, and are therefore rescaled.\n#> â„¹ Set the tmap option `component.autoscale = FALSE` to disable rescaling.\n```\n\n::: {.cell-output-display}\n![](figures/arrangements-6-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n\n\n<!-- reexplain asp -->\n\n<!-- possibly add a tm_add_legend example plus a ref -->\n\n<!-- tmap view mode (sync) -->\n<!-- tmap_save -->\n",
    "supporting": [
      "arrangements_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}