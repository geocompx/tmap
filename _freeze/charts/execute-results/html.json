{
  "hash": "b44e883d1932ee36c71d8985be0f1195",
  "result": {
    "engine": "knitr",
    "markdown": "\n::: {.cell}\n\n:::\n\n\n# Charts {#sec-charts}\n\n\\index{charts}\nThematic maps usually represent one or more variables using colors, shapes, or sizes.\nThen, the map legend is used to explain the meaning of these visual variables (@sec-legends).\nSuch a legend can be expanded (or even replaced, @sec-charts-customization) with a chart that provides more information about the distribution of the variable values.\n\n\\index{histogram}\nThe **tmap** package provides several chart types that can be used in the map legend (@tbl-layers-table).\nThey are specified in one of the `*.chart` arguments of a layer function, e.g., `fill.chart` of `tm_polygons()`, `size.chart` of `tm_dots()`, etc.\nThe use of a chart type depends on the type of data we want to represent, i.e., whether it is numerical or categorical, and whether it is univariate or bivariate.\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n<!-- Martijn, why do we need to show and explain `tm_chart_none()`? -->\n\n\n::: {#tbl-layers-table .cell layout-align=\"center\" tbl-cap='Available chart types.'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Function </th>\n   <th style=\"text-align:left;\"> Description </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;font-family: monospace;\"> tm_chart_histogram() </td>\n   <td style=\"text-align:left;\"> Histogram </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-family: monospace;\"> tm_chart_box() </td>\n   <td style=\"text-align:left;\"> Box plot </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-family: monospace;\"> tm_chart_violin() </td>\n   <td style=\"text-align:left;\"> Violin plot </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-family: monospace;\"> tm_chart_bar() </td>\n   <td style=\"text-align:left;\"> Bar chart </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-family: monospace;\"> tm_chart_donut() </td>\n   <td style=\"text-align:left;\"> Donut chart </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-family: monospace;\"> tm_chart_heatmap() </td>\n   <td style=\"text-align:left;\"> Heatmap </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nFor the examples in this chapter, we use the Slovenian regions dataset that contains information about the population density, region group, and the percentage of the population aged 65 or more in each region.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tmap)\nlibrary(sf)\nslo_regions = read_sf(\"data/slovenia/slo_regions.gpkg\")\n```\n:::\n\n\n## Numerical data\n\nThe first group of charts is used for numerical data, i.e., data that can take any value within a range.\nIt includes histograms, box plots, violin plots, and donut charts.\n\n\\index{histogram}\nHistograms are the most common chart type used to represent the distribution of a numerical variable.\nThey show how often each range of values occurs in the data -- helping to understand which values are more common and if there are any outliers.\nTo add a histogram to the map, we use the `tm_chart_histogram()` function in the `fill.chart` argument of a map layer function, such as `tm_polygons()` (@fig-chart-hist-1).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_regions) +\n  tm_symbols(fill = \"pop_dens\",\n             fill.chart = tm_chart_histogram())\n```\n:::\n\n\nSuch a histogram, like other charts, is automatically placed along the map legend.\nHowever, we can position them independently of the map legend using the `position` arguments of the `tm_chart_*()` and `tm_legend()` functions (@fig-chart-hist-2).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_regions) +\n  tm_polygons(fill = \"pop_dens\",\n              fill.chart = tm_chart_histogram(\n                position = tm_pos_out(\"left\", \"center\")\n                ),\n              fill.legend = tm_legend(\n                position = tm_pos_out(\"right\", \"center\")\n                )\n              )\n```\n:::\n\n\n\n::: {#fig-chart-hist .cell layout-nrow=\"2\" layout-align=\"center\"}\n::: {.cell-output-display}\n![default histogram](figures/fig-chart-hist-1.png){#fig-chart-hist-1 fig-align='center' fig-pos='t' width=100%}\n:::\n\n::: {.cell-output-display}\n![repositioned histogram](figures/fig-chart-hist-2.png){#fig-chart-hist-2 fig-align='center' fig-pos='t' width=100%}\n:::\n\nHistogram added to a map to represent the distribution of a variable.\n:::\n\n\n@fig-chart-num shows three additional chart types that can be used for numerical data: box plots, violin plots, and donut charts.\nThey can be added to the map using the `tm_chart_box()`, `tm_chart_violin()`, and `tm_chart_donut()` functions, respectively.\nAs you may notice, these charts show similar messages, e.g., that the middle value range is the most common.\nMoreover, box plots directly show the median and quartiles of the data, violin plots also show the density of the data distribution, and donut charts show the proportions of the data.\nThey also have different aesthetics.\nThus, the choice of the chart type depends on the message we want to convey and the aesthetics we prefer.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# box plot\ntm_shape(slo_regions) +\n  tm_polygons(fill = \"pop_dens\",\n              fill.chart = tm_chart_box())\n# violin plot\ntm_shape(slo_regions) +\n  tm_polygons(fill = \"pop_dens\",\n              fill.chart = tm_chart_violin())\n# donut plot\ntm_shape(slo_regions) +\n  tm_polygons(fill = \"pop_dens\",\n              fill.chart = tm_chart_donut())\n```\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Charts for numerical data.](figures/fig-chart-num-1.png){#fig-chart-num fig-align='center' fig-pos='t' width=100%}\n:::\n:::\n\n\n## Categorical data\n\n\\index{bar charts}\n\\index{donut charts}\nThe second group of charts is used for categorical data -- which can take only a limited number of values.\nIt includes donut charts (`tm_chart_donut()`) and bar charts (`tm_chart_bar()`): bar charts show the frequency of each category, while donut charts show the proportions of each category (@fig-chart-cat).\nIn the examples below, we represent the region groups of each region in Slovenia and observe that there are more regions in the \"Central\" and \"West\" groups than in the others.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_regions) +\n  tm_polygons(fill = \"region_group\",\n              fill.chart = tm_chart_donut())\ntm_shape(slo_regions) +\n  tm_polygons(fill = \"region_group\",\n              fill.chart = tm_chart_bar())\n```\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Charts for categorical data.](figures/fig-chart-cat-1.png){#fig-chart-cat fig-align='center' fig-pos='t' width=100%}\n:::\n:::\n\n\n## Bivariate data\n\n\\index{bivariate data}\n\\index{heatmap}\nThe third group of charts is used for bivariate data, i.e., data that contains two variables.\nIt includes heatmap (`tm_chart_heatmap()`) that shows how often each combination of values from two variables occurs in the data (@fig-chart-bivariate).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_regions) +\n  tm_polygons(fill = tm_vars(c(\"pop_dens\", \"pop65perc\"), multivariate = TRUE),\n              fill.scale = tm_scale_bivariate(values = \"purplegold\"),\n              fill.chart = tm_chart_heatmap())\n```\n\n::: {.cell-output-display}\n![Bivariate charts used in case to represent relationships between two numerical variables.](figures/fig-chart-bivariate-1.png){#fig-chart-bivariate fig-align='center' fig-pos='t' width=100%}\n:::\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n## Additional chart customization {#sec-charts-customization}\n\n\\index{ggplot2}\nAll of the charts are directly based on the visual variables from the map layer and then created internally using the **ggplot2** package (@R-ggplot2).\nBy default, however, the charts are much simplified, not showing all the details that **ggplot2** can provide, such as axis labels, titles, and various theme elements.\n<!-- https://github.com/geocompx/tmap/issues/10#issuecomment-3007409988 -->\n\nAt the same time, we still may want to customize the charts to fit our map design better or to add more information.\nThis can be done with additional arguments of the `tm_chart_*()` functions, such as `plot.axis.x`, `plot.axis.y`, and `extra.ggplot2`.\nThe first two are logical arguments that control whether the x and y axes are shown in the chart, respectively.\nThe last one, `extra.ggplot2`, is a list of additional **ggplot2** functions that are applied to the chart -- for example, we may want to change the aesthetics of the chart, such as the background color, as shown in @fig-chart-ggplot1.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(ggplot2)\ntm_shape(slo_regions) +\n  tm_polygons(fill = \"pop_dens\",\n              fill.chart = tm_chart_histogram(\n                plot.axis.x = FALSE,\n                extra.ggplot2 = list(\n                  theme(plot.background = element_rect(fill = \"lightgray\"))\n                )\n              ))\n```\n\n::: {.cell-output-display}\n![Customizing charts with ggplot2.](figures/fig-chart-ggplot1-1.png){#fig-chart-ggplot1 fig-align='center' fig-pos='t' width=100%}\n:::\n:::\n\n\n@fig-chart-ggplot2 shows a more advanced modification of the chart.\nIt adds x and y axes, next, it adds a title to the chart, flips the chart coordinates, and changes the chart background color and title size.\nNext, it moves the chart to the top left corner of the map and sets its width.\nHaving such a customized chart provides all of the essential map context information: variable name, unit, ranges of the values, and their related colors.\nThus, we can treat it as a map legend and remove the default legend using `fill.legend = tm_legend(show = FALSE)`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_regions) +\n  tm_polygons(fill = \"pop_dens\",\n              fill.chart = tm_chart_histogram(\n                plot.axis.x = TRUE,\n                plot.axis.y = TRUE,\n                extra.ggplot2 = list(\n                  labs(title = \"Population density (people/sq. km)\"),\n                  coord_flip(),\n                  theme(plot.background = element_rect(fill = \"#FFC067\"),\n                        plot.title = ggplot2::element_text(size = 10))),\n                position = tm_pos_in(\"LEFT\", \"TOP\"),\n                width = 24,\n              ),\n              fill.legend = tm_legend(show = FALSE))\n```\n\n::: {.cell-output-display}\n![Using chart as a map legend.](figures/fig-chart-ggplot2-1.png){#fig-chart-ggplot2 fig-align='center' fig-pos='t' width=100%}\n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}