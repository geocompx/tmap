{
  "hash": "b0906d24717373060153946109ba0525",
  "result": {
    "engine": "knitr",
    "markdown": "::: {.cell}\n\n:::\n\n\n\n\n# Data preparation {#sec-data-prep}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tmap)\nlibrary(sf)\nworldvector = read_sf(\"data/worldvector.gpkg\")\n```\n:::\n\n\n\n\n## Data simplification {#sec-data-simplification}\n\n<!-- this content should be (split?) and moved to other chapters -->\n\nGeometries in spatial vector data consists of sets of coordinates (@sec-vector-data-model).\nSpatial vector objects grow larger with more features to present and more details to show, and this also has an impact on time to render a map.\n<!-- also to consider - the level of generalization -->\n@fig-vectordown-1 shows a map of countries from the `worldvector` object.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(worldvector) +\n  tm_polygons()\n```\n:::\n\n\n\n\nThis level of detail can be good for some maps, but sometimes the number of details can make reading the map harder.\nTo create a simplified (smoother) version of vector data, we can use the `ms_simplify` function of the **rmapshaper** package.\n<!--add two citations: to mapshaper and rmapshaper-->.\nIt expects a numeric value from 0 to 1 -- a proportion of vertices in the data to retain.\nIn the example below, we set `keep` to 0.05, which keeps 5% of vertices (@fig-vectordown-2).\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(rmapshaper)\nworldvector_s1 = ms_simplify(worldvector, keep = 0.05)\ntm_shape(worldvector_s1) +\n  tm_polygons()\n```\n:::\n\n\n\n\nThe process of simplification can also be more controlled.\nBy default, the underlining algorithm (called the Visvalingam method, learn more at https://bost.ocks.org/mike/simplify/), removes small features, such as islands in our case.\nThis could have far-reaching consequences - in the process of simplification, we could remove some countries!\nTo prevent the deletion of small features, we also need to set `keep_shapes` to `TRUE`.\nIn the case of one country consisting of many small polygons, only one is sure to be retained.\nFor example, look at New Zealand, which is now only represented by Te Waipounamu (the South Island).\nTo keep all of the spatial geometries (even the smallest of islands), we should also specify `explode` to `TRUE`.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nworldvector_s2 = ms_simplify(worldvector, keep = 0.05,\n                             keep_shapes = TRUE, explode = TRUE)\ntm_shape(worldvector_s2) +\n  tm_polygons()\n```\n:::\n\n\n\n\n@fig-vectordown-3 contains a simplified map, where each spatial geometry of the original map still exists, but in a less detailed form.\n\n\n\n\n::: {#fig-vectordown .cell layout-ncol=\"3\" layout-align=\"center\"}\n::: {.cell-output-display}\n![original data](figures/fig-vectordown-1.png){#fig-vectordown-1 fig-align='center' width=100%}\n:::\n\n::: {.cell-output-display}\n![simplified data with 5% of vertices kept](figures/fig-vectordown-2.png){#fig-vectordown-2 fig-align='center' width=100%}\n:::\n\n::: {.cell-output-display}\n![simplified data with 5% of vertices, all features, and all polygons kept](figures/fig-vectordown-3.png){#fig-vectordown-3 fig-align='center' width=100%}\n:::\n\nA map of world's countries based on:\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}