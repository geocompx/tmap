{
  "hash": "b8431e774c4a77935314bd080a02f2bb",
  "result": {
    "engine": "knitr",
    "markdown": "\n::: {.cell}\n\n:::\n\n\n# tmap options {#sec-options}\n\n<!-- tmap_options -->\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tmap)\nlibrary(stars)\nworldelevation = read_stars(\"data/worldelevation.tif\")\n```\n:::\n\n\n## Raster resolution\n\n<!-- 2/resolution -->\nRaster data is represented by a grid of cells (@sec-raster-data-model), and the number of cells impacts the time to render a map.\nRasters with hundreds of cells will be plotted quickly, while rasters with hundreds of millions or billions of cells will take a lot of time (and RAM) to be shown.\n<!-- ... some info about screen resolution -->\nTherefore, the **tmap** package downsamples large rasters by default to be below 10,000,000 cells in the plot mode and 1,000,000 cells in the view mode.\n<!-- c(plot = 1e7, view = 1e6) -->\nThis values can be adjusted with the `raster.max_cells` argument of `tmap_options()`, which expects a named vector with two elements - `plot` and `view` (@fig-rasterdown).\n<!-- btw - downsampling cont vs cat -->\n<!-- when and why -->\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntmap_options(raster.max_cells = c(plot = 5000, view = 2000))\ntm_shape(worldelevation) +\n  tm_raster(\"worldelevation.tif\")\n```\n\n::: {.cell-output-display}\n![A raster map with the decreased resolution](options_files/figure-html/fig-rasterdown-1.png){#fig-rasterdown fig-align='center' width=100%}\n:::\n:::\n\n\n## Resetting the options\n\nAny **tmap** options can be reset (set to default) with `tmap_options_reset()`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntmap_options_reset()\n```\n:::\n\n",
    "supporting": [
      "options_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}