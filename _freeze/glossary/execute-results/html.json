{
  "hash": "3a0060410a54a27300de2ec120338362",
  "result": {
    "engine": "knitr",
    "markdown": "\n::: {.cell}\n\n:::\n\n\n# Glossary {#sec-glossary}\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n::: {#tbl-glossary .cell layout-align=\"center\" tbl-cap='Glossary of tmap terms.'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Term </th>\n   <th style=\"text-align:left;\"> Explanation </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Auxiliary map layer </td>\n   <td style=\"text-align:left;width: 8cm; \"> An auxiliary (or non-data-driven) map layer is a visual representation of geographic information that does not come from a spatial object, but uses the map's coordinates. Examples: &lt;code&gt;tm_grid()&lt;/code&gt;/&lt;code&gt;tm_graticules()&lt;/code&gt; and &lt;code&gt;tm_basemap()&lt;/code&gt;. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Chart </td>\n   <td style=\"text-align:left;width: 8cm; \"> A small non-spatial data visualization. In tmap for several purposes: 1) an addition to a legend &lt;code&gt;tm_polygons(fill = \"var\", fill.chart = tm_chart_histogram())&lt;/code&gt;, 2) a glyph (see &lt;strong&gt;glyphs&lt;/strong&gt;), 3) a custom chart plotted as an inset. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Data-driven map layer </td>\n   <td style=\"text-align:left;width: 8cm; \"> A data-driven map layer is a visual representation of a spatial object. E.g., &lt;code&gt;tm_polygons()&lt;/code&gt; or &lt;code&gt;tm_raster()&lt;/code&gt;. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Facets </td>\n   <td style=\"text-align:left;width: 8cm; \"> Multiple maps in one plot. Also called 'small multiples'. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Features </td>\n   <td style=\"text-align:left;width: 8cm; \"> Elementary spatial data objects. For instance, a row in an &lt;code&gt;sf&lt;/code&gt; data frame or a single raster cell. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Glyph </td>\n   <td style=\"text-align:left;width: 8cm; \"> Mini charts that are used as proportional symbols. See the extension package &lt;code&gt;tmap.glyphs&lt;/code&gt;. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Inset </td>\n   <td style=\"text-align:left;width: 8cm; \"> A visual object that is plotted on a specific (pre-defined) location. It can be a small map (&lt;strong&gt;minimap&lt;/strong&gt;) or a &lt;strong&gt;chart&lt;/strong&gt;. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Layout </td>\n   <td style=\"text-align:left;width: 8cm; \"> All aspects that specify the plot apart from the map layers and map components. Examples: margins, background color, aspect ratio, font sizes, etc. These can be set via &lt;code&gt;tm_layout&lt;/code&gt;. These layout options form a subset of all tmap options (see &lt;strong&gt;options&lt;/strong&gt;). </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Map component </td>\n   <td style=\"text-align:left;width: 8cm; \"> A visual plot object with a position independent of map coordinates. Examples: a legend, a compass, a title. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Map layer </td>\n   <td style=\"text-align:left;width: 8cm; \"> A map layer is a visual representation of geographical information. We distinguish two types: &lt;em&gt;data-driven&lt;/em&gt; and &lt;em&gt;auxiliary&lt;/em&gt; map layers. The former requires spatial objects, whereas the latter only requires the geographic information (bounding box and coordinate reference system). </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Options </td>\n   <td style=\"text-align:left;width: 8cm; \"> In the context of tmap, we refer to the options as settings, which can be configured using &lt;code&gt;tm_options&lt;/code&gt;. These can be &lt;em&gt;layout&lt;/em&gt; options (see &lt;strong&gt;layout&lt;/strong&gt;) or otherwise (e.g., &lt;code&gt;'show.messages'&lt;/code&gt;). </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Proportional symbols </td>\n   <td style=\"text-align:left;width: 8cm; \"> Proportional symbols are symbols that are drawn at geographic locations and that are sized proportionally with a data variable. The result is known as a 'proportional symbol map'. These symbols are usually bubbles (filled circles), but can also be small charts, called &lt;strong&gt;glyphs&lt;/strong&gt;. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Scale function </td>\n   <td style=\"text-align:left;width: 8cm; \"> A scale function determines how to scale a data variable to either a visual variable or a transformation variable. Examples: &lt;code&gt;tm_scale_continuous()&lt;/code&gt;, &lt;code&gt;tm_scale_categorical()&lt;/code&gt;. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Shape (object) </td>\n   <td style=\"text-align:left;width: 8cm; \"> 'Shape' is a nickname for a spatial data object. It is used in &lt;code&gt;tm_shape()&lt;/code&gt;. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Shape (visual variable) </td>\n   <td style=\"text-align:left;width: 8cm; \"> The shape is a visual variable for some map layer functions, most prominently &lt;code&gt;tm_symbols()&lt;/code&gt;. It determines the shape/design of the symbols. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Style </td>\n   <td style=\"text-align:left;width: 8cm; \"> The overall layout of the map. Similar to ggplot2's 'theme' (see &lt;strong&gt;theme&lt;/strong&gt;). </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Theme </td>\n   <td style=\"text-align:left;width: 8cm; \"> tmap stands for 'thematic maps', where &lt;em&gt;theme&lt;/em&gt; refers to the topic of the data plotted on a map. Note that in ggplot2, a 'theme' refers to the overall layout, e.g., &lt;code&gt;ggplot2::theme_minimal()&lt;/code&gt;. In tmap, we use &lt;strong&gt;style&lt;/strong&gt; for this. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Transformation variable </td>\n   <td style=\"text-align:left;width: 8cm; \"> A variable of a data-driven map layer that determines a &lt;em&gt;transformation&lt;/em&gt; of the spatial object. For instance, &lt;code&gt;tm_cartogram(size = \"var\")&lt;/code&gt;. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Visual variable </td>\n   <td style=\"text-align:left;width: 8cm; \"> A variable of a data-driven map layer that determines a &lt;em&gt;visual&lt;/em&gt; aspect. This can be data-driven, e.g., &lt;code&gt;tm_polygons(fill = \"var\")&lt;/code&gt;, where &lt;code&gt;var&lt;/code&gt; is the name of an &lt;code&gt;sf&lt;/code&gt; column, or a constant value, such as &lt;code&gt;tm_polygons(fill = \"blue\")&lt;/code&gt;. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> tmap element </td>\n   <td style=\"text-align:left;width: 8cm; \"> A &lt;code&gt;tm_&lt;/code&gt; object that can be stacked with the &lt;code&gt;+&lt;/code&gt; operator. These are: &lt;code&gt;tm_shape()&lt;/code&gt;, map layer functions (such as &lt;code&gt;tm_polygons()&lt;/code&gt;), facet specification function &lt;code&gt;tm_facets()&lt;/code&gt;, map components (such as &lt;code&gt;tm_compass()&lt;/code&gt;), and layout/option specification functions, such as &lt;code&gt;tm_layout()&lt;/code&gt;. </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}