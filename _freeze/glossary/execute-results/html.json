{
  "hash": "85303c7f87e6bab90f9156ca50b35534",
  "result": {
    "engine": "knitr",
    "markdown": "\n::: {.cell}\n\n:::\n\n\n# Glossary {#sec-glossary}\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n::: {#tbl-glossary .cell layout-align=\"center\" tbl-cap='Glossary of tmap terms'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Term </th>\n   <th style=\"text-align:left;\"> Explanation </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Auxiliary map layer </td>\n   <td style=\"text-align:left;width: 8cm; \"> An auxiliary (or non-data-driven) map layer is a visual representation of geographic information that does not come from a spatial object, but uses the map's coordinates. Examples: `tm_grid()`/`tm_graticules()` and `tm_basemap()`. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Chart </td>\n   <td style=\"text-align:left;width: 8cm; \"> A small non-spatial data visualization. In tmap for several purposes: 1) an addition to a legend `tm_polygons(fill = \"var\", fill.chart = tm_chart_histogram())`, 2) a glyph (see **glyphs**), 3) a custom chart plotted as an inset. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Data-driven map layer </td>\n   <td style=\"text-align:left;width: 8cm; \"> A data-driven map layer is a visual representation of a spatial object. E.g., `tm_polygons()` or `tm_raster()`. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Facets </td>\n   <td style=\"text-align:left;width: 8cm; \"> Multiple maps in one plot. Also called 'small multiples'. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Features </td>\n   <td style=\"text-align:left;width: 8cm; \"> Elementary spatial data objects. For instance, a row in an `sf` data.frame or a single raster cell. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Glyph </td>\n   <td style=\"text-align:left;width: 8cm; \"> Mini charts that are used as proportional symbols. See the extension package `tmap.glyphs`. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Inset </td>\n   <td style=\"text-align:left;width: 8cm; \"> A visual object that is plotted on a specific (pre-defined) location. It can be a small map (**minimap**) or a **chart**. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Layout </td>\n   <td style=\"text-align:left;width: 8cm; \"> All aspects that specify the plot apart from the map layers and map components. Examples: margins, background color, aspect ratio, font sizes, etc. These can be set via `tm_layout`. These layout options form a subset of all tmap options (see **options**). </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Map component </td>\n   <td style=\"text-align:left;width: 8cm; \"> A visual plot object with a position independent of map coordinates. Examples: a legend, a compass, a title. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Map layer </td>\n   <td style=\"text-align:left;width: 8cm; \"> A map layer is a visual representation of geographical information. We distinguish two types: *data-driven* and *auxiliary* map layers. The former requires spatial objects whereas the latter only the geographic information (bounding box and coordinate reference system). </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Options </td>\n   <td style=\"text-align:left;width: 8cm; \"> In the context of tmap, we refer to the options as settings, which can be configured using `tm_options`. These can be *layout* options (see **layout**) or otherwise (e.g., `'show.messages'`). </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Proportional symbols </td>\n   <td style=\"text-align:left;width: 8cm; \"> Proportional symbols are symbols that are drawn at geographic locations and that are sized proportionally with a data variable. The result is known as a 'proportional symbol map'. These symbols are usually bubbles (filled circles), but can also be small charts, called **glyphs**. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Scale function </td>\n   <td style=\"text-align:left;width: 8cm; \"> A scale function determines how to scale a data variable to either a visual variable or a transformation variable. Examples: `tm_scale_continuous`, `tm_scale_categorical`. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Shape (object) </td>\n   <td style=\"text-align:left;width: 8cm; \"> 'Shape' is a nickname for a spatial data object. It is used in `tm_shape()`. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Shape (visual variable) </td>\n   <td style=\"text-align:left;width: 8cm; \"> The shape is a visual variable for some map layer functions, most prominently `tm_symbols()`. It determines the shape/design of the symbols. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Style </td>\n   <td style=\"text-align:left;width: 8cm; \"> The overall layout of the map. Similar to ggplot2's 'theme' (see **theme**). </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Theme </td>\n   <td style=\"text-align:left;width: 8cm; \"> tmap stands for 'thematic maps', where *theme* refers to the topic of the data plotted on a map. Note that in ggplot2, a 'theme' refers to the overall layout, e.g. `ggplot2::theme_minimal()`. In tmap, we use **style** for this. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Transformation variable </td>\n   <td style=\"text-align:left;width: 8cm; \"> A variable of a data-driven map layer that determines a *transformation* of the spatial object. (TO DO: exact definition). For instance, `tm_cartogram(size = \"var\")`. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> Visual variable </td>\n   <td style=\"text-align:left;width: 8cm; \"> A variable of a data-driven map layer that determines a *visual* aspect. This can be data-driven, e.g. `tm_polygons(fill = \"var\")`, where `var` is the name of an `sf` column, or a constant value, such as `tm_polygons(fill = \"blue\")`. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;width: 4cm; font-family: monospace;\"> tmap element </td>\n   <td style=\"text-align:left;width: 8cm; \"> A `tm_` object that can be stacked with the `+` operator. These are: `tm_shape()`, map layer functions (such as `tm_polygons()`), facet specification function `tm_facets()`, map components (such as `tm_compass()`), and layout/option specification functions, such as `tm_layout()`. </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}