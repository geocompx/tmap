{
  "hash": "c2bd8d8bd5bdeac9d3fff74523f8ee6c",
  "result": {
    "engine": "knitr",
    "markdown": "::: {.cell}\n\n:::\n\n\n\n\n\n# Facets {#sec-facets}\n<!-- small-multiples -->\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(tmap)\nslo_borders = read_sf(\"data/slovenia/slo_border.gpkg\")\nslo_regions = read_sf(\"data/slovenia/slo_regions.gpkg\")\nslo_regions_ts = read_sf(\"data/slovenia/slo_regions_ts.gpkg\")\nslo_regions_ts = subset(slo_regions_ts, time %in% c(\"2006\", \"2010\", \"2014\", \"2018\", \"2022\"))\n```\n:::\n\n\n\n\n\n<!-- tm_facets() -->\n<!-- two approaches -- variables (e.g., columns) vs values in one variable -->\n<!-- + a mix of both approaches -->\n<!-- should we limit to e.g., 5 years? -->\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_borders) +\n  tm_borders() +\n  tm_shape(slo_regions) +\n  tm_fill(c(\"pop_dens\", \"gdppercap\", \"tourism\"))\n#> [plot mode] fit legend/component: Some legend items or map compoments do not\n#> fit well, and are therefore rescaled.\n#> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling.\n```\n\n::: {.cell-output-display}\n![](figures/unnamed-chunk-3-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_borders) +\n  tm_borders() +\n  tm_shape(slo_regions_ts) +\n  tm_fill(\"gdppercap\") +\n  tm_facets(by = \"time\", ncol = 5)\n#> [plot mode] fit legend/component: Some legend items or map compoments do not\n#> fit well, and are therefore rescaled.\n#> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling.\n```\n\n::: {.cell-output-display}\n![](figures/unnamed-chunk-4-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_borders) +\n  tm_borders() +\n  tm_shape(slo_regions_ts) +\n  tm_fill(c(\"pop_dens\", \"gdppercap\", \"tourism\")) +\n  tm_facets(by = \"time\")\n#> [plot mode] fit legend/component: Some legend items or map compoments do not\n#> fit well, and are therefore rescaled.\n#> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling.\n```\n\n::: {.cell-output-display}\n![](figures/unnamed-chunk-5-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n\n\n<!-- customize -->\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_borders) +\n  tm_borders() +\n  tm_shape(slo_regions_ts) +\n  tm_fill(\"gdppercap\") +\n  tm_facets(by = \"region_group\", ncol = 5)\n#> [plot mode] fit legend/component: Some legend items or map compoments do not\n#> fit well, and are therefore rescaled.\n#> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling.\n```\n\n::: {.cell-output-display}\n![](figures/unnamed-chunk-6-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_regions_ts) +\n  tm_fill(\"gdppercap\") +\n  tm_facets(by = \"region_group\", ncol = 5) +\n  tm_shape(slo_borders) +\n  tm_borders()\n#> [plot mode] fit legend/component: Some legend items or map compoments do not\n#> fit well, and are therefore rescaled.\n#> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling.\n```\n\n::: {.cell-output-display}\n![](figures/unnamed-chunk-7-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_regions_ts) +\n  tm_fill(\"gdppercap\") +\n  tm_facets(by = \"region_group\", ncol = 5, free.coords = FALSE) +\n  tm_shape(slo_borders) +\n  tm_borders()\n#> [plot mode] fit legend/component: Some legend items or map compoments do not\n#> fit well, and are therefore rescaled.\n#> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling.\n```\n\n::: {.cell-output-display}\n![](figures/unnamed-chunk-8-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n\n\n<!-- other facets functions -->\n<!-- tm_facets_wrap(by = \"VARS__\", nrow = NA, ncol = NA, byrow = TRUE, ...) -->\n<!-- tm_facets_grid(rows = NULL, columns = NULL, pages = NULL, ...) -->\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_borders) +\n  tm_borders() +\n  tm_shape(slo_regions_ts) +\n  tm_fill(\"gdppercap\") +\n  tm_facets_wrap(by = \"region_group\", ncol = 5)\n#> [plot mode] fit legend/component: Some legend items or map compoments do not\n#> fit well, and are therefore rescaled.\n#> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling.\n```\n\n::: {.cell-output-display}\n![](figures/unnamed-chunk-9-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_borders) +\n  tm_borders() +\n  tm_shape(slo_regions_ts) +\n  tm_fill(\"gdppercap\") +\n  tm_facets_grid(rows = \"region_group\", columns = \"time\")\n```\n\n::: {.cell-output-display}\n![](figures/unnamed-chunk-10-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n\n\n<!-- tm_xlab and tm_ylab for better labels -->\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_borders) +\n  tm_borders() +\n  tm_shape(slo_regions_ts) +\n  tm_fill(\"gdppercap\") +\n  tm_facets_grid(rows = \"region_group\", columns = \"time\") +\n  tm_xlab(\"Year\", side = \"top\", size = 2, space = 1) +\n  tm_ylab(\"Region\", rotation = 90, size = 2, space = 1)\n```\n\n::: {.cell-output-display}\n![](figures/unnamed-chunk-11-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n\n\n<!-- also: https://r-tmap.github.io/tmap/articles/adv_multivariate -->\n\n<!-- mention the rest -->\n<!-- tm_facets_stack(by = \"VARS__\", orientation = NA, ...) -->\n<!-- tm_facets_hstack(by = \"VARS__\", ...) -->\n<!-- tm_facets_vstack(by = \"VARS__\", ...) -->\n<!-- tm_facets_pagewise(by = \"VARS__\", byrow = TRUE, ...) -->\n<!-- tm_facets_flip(...) -->\n\n<!-- Raster data -- where to add it in this section: either mix with the other content or after it -->\n<!-- show how to add colors independently to each raster panel -->\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(stars)\nslo_tavg = read_stars(\"data/slovenia/slo_tavg.tif\")\nslo_elev = read_stars(\"data/slovenia/slo_elev.tif\")\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_tavg) +\n  tm_raster() +\n  tm_facets(by = \"band\", ncol = 4)\n#> [scale] tm_raster:() the data variable assigned to 'col' contains positive and negative values, so midpoint is set to 0. Set 'midpoint = NA' in 'fill.scale = tm_scale_intervals(<HERE>)' to use all visual values (e.g. colors)\n```\n\n::: {.cell-output-display}\n![](figures/unnamed-chunk-13-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_tavg) +\n  tm_raster(\n    col.scale = tm_scale_continuous(values = \"viridis\"),\n    col.legend = tm_legend(title = \"Temperature (°C)\"),\n    col.free = TRUE) +\n  tm_facets(by = \"band\", ncol = 4)\n#> [plot mode] fit legend/component: Some legend items or map compoments do not\n#> fit well, and are therefore rescaled.\n#> ℹ Set the tmap option `component.autoscale = FALSE` to disable rescaling.\n```\n\n::: {.cell-output-display}\n![](figures/unnamed-chunk-14-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n\n\n<!-- mixing with vector data -->\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_elev) +\n  tm_raster() +\n  tm_shape(slo_regions, is.main = TRUE) + \n  tm_borders() +\n  tm_facets(by = \"region_group\", free.coords = TRUE)\n#> [scale] tm_raster:() the data variable assigned to 'col' contains positive and negative values, so midpoint is set to 0. Set 'midpoint = NA' in 'fill.scale = tm_scale_intervals(<HERE>)' to use all visual values (e.g. colors)\n```\n\n::: {.cell-output-display}\n![](figures/unnamed-chunk-15-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntm_shape(slo_regions, is.main = TRUE) + \n  tm_borders() +\n  tm_facets(by = \"region_group\", free.coords = TRUE) +\n  tm_shape(slo_elev) +\n  tm_raster() \n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}